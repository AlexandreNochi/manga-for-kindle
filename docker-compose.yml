services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: manga
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7
    ports:
      - '6379:6379'

  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    volumes:
      - ./manga-for-kindle-back:/app
    ports:
      - '3001:3000' # Web
      - '9229:9229' # Debug
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/manga
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis
    command: npm run start:debug

  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    volumes:
      - ./manga-for-kindle-front:/app
    ports:
      - '3000:3000'    # Web
      # - '9230:9230'    # Debug
    environment:
      - NODE_ENV=development
    command: node --inspect=0.0.0.0:9230 node_modules/.bin/next dev
    depends_on:
      - backend

  image-worker:
    build:
      context: ./manga-for-kindle-worker-image-process
      dockerfile: ../docker/Dockerfile.worker
    volumes:
      - ./manga-for-kindle-worker-image-process:/app
    ports:
      - '9231:9231' # Debug
    command: node --inspect=0.0.0.0:9231 dist/main.js


  epub-worker:
    build:
      context: ./manga-for-kindle-worker-epub-process
      dockerfile: ../docker/Dockerfile.worker
    volumes:
      - ./manga-for-kindle-worker-epub-process:/app
    ports:
      - '9232:9232' # Debug
    command: node --inspect=0.0.0.0:9231 dist/main.js

volumes:
  pgdata:
